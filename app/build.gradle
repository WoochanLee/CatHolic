plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
    id 'kotlin-kapt'
    id 'jacoco'
}

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "com.woody.cat.holic"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "0.1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation project(":core")
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.activity:activity-ktx:1.2.1'
    implementation 'androidx.fragment:fragment-ktx:1.3.1'
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'com.google.mlkit:image-labeling:17.0.3'
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation "androidx.camera:camera-view:1.0.0-alpha23"
    implementation 'com.google.android.gms:play-services-auth:19.0.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.4.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'com.github.CanHub:Android-Image-Cropper:3.1.0'
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation 'com.vanniktech:emoji-twitter:0.7.0'
    implementation 'com.vdurmont:emoji-java:5.1.1'

    //firebase
    implementation platform('com.google.firebase:firebase-bom:26.7.0')
    implementation 'com.google.firebase:firebase-storage'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-ads'

    implementation "com.google.dagger:dagger:$dagger_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    //debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation 'org.mockito:mockito-core:3.8.0'
    testImplementation 'org.mockito:mockito-inline:3.2.4'
    testImplementation "org.mockito.kotlin:mockito-kotlin:3.1.0"
    testImplementation "io.mockk:mockk:1.11.0"
    testImplementation 'com.jraska.livedata:testing-ktx:1.1.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.3'
    testImplementation "androidx.paging:paging-common-ktx:$paging_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

jacoco {
    toolVersion = "0.7.9"
    reportsDir = file("$buildDir/reports")
}

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports for Debug build"

    reports {
        xml.enabled = true
        html.enabled = true
    }

    // what to exclude from coverage report
    // UI, "noise", generated classes, platform classes, etc.
    def excludes = [
            '**/R.class',
            '**/R$*.class',
            '**/*$ViewInjector*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            '**/*Fragment.*',
            '**/*Activity.*'
    ]
    // generated classes
    classDirectories.from = fileTree(
            dir: "$buildDir/intermediates/classes/debug",
            excludes: excludes
    ) + fileTree(
            dir: "$buildDir/tmp/kotlin-classes/debug",
            excludes: excludes
    )

    // sources
    sourceDirectories.from = files([
            android.sourceSets.main.java.srcDirs,
            "src/main/kotlin"
    ])
    executionData.from = files("$buildDir/jacoco/testDebugUnitTest.exec")
}